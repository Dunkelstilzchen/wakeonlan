package wakeonlan

import (
	"testing"
)

func TestMagicPackageGeneration(t *testing.T) {
	magicPackage, err := buildMagicPackage("00-80-41-ae-fd-7e")
	if err != nil {
		t.Fail()
	}
	expectedResult := []byte{
		0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
		0x00, 0x80, 0x41, 0xae, 0xfd, 0x7e,
	}

	if len(magicPackage) != len(expectedResult) {
		t.Fail()
	}

	for i := 0; i < len(magicPackage); i++ {
		if magicPackage[i] != expectedResult[i] {
			t.Fail()
		}
	}
}
